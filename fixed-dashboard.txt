import { useEffect, useMemo, useState, lazy, Suspense } from "react";
import { useQuery } from "@tanstack/react-query";
import { Link } from "wouter";
import { useAuth } from "@/context/AuthContext";
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import {
  AlertTriangle,
  Activity,
  Heart,
  Thermometer,
  Calendar,
  MessageSquare,
  CheckCircle,
  Users,
  FileText,
  Newspaper,
  ExternalLink,
} from "lucide-react";
import { Button } from "@/components/ui/button";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";
import {
  Tabs,
  TabsContent,
  TabsList,
  TabsTrigger,
} from "@/components/ui/tabs";
import { 
  BarChart, 
  Bar, 
  XAxis, 
  YAxis, 
  CartesianGrid, 
  Tooltip as RechartTooltip, 
  Legend,
  ResponsiveContainer,
  PieChart,
  Pie,
  Cell
} from "recharts";
import HealthDataCard from "@/components/HealthDataCard";
import HealthTipsSidebar from "@/components/HealthTipsSidebar";
import PreventCalculator from "@/components/PreventCalculator";
import HeartRiskCalculators from "@/components/HeartRiskCalculators";

export default function Dashboard() {
  const { user } = useAuth();
  
  const [isDoctor, setIsDoctor] = useState(false);
  
  // Get conversations for the user
  const { data: conversations, isLoading: conversationsLoading } = useQuery({
    queryKey: ['/api/conversations'],
    enabled: !!user,
  });
  
  // Get predictions for the user
  const { data: predictions, isLoading: predictionsLoading } = useQuery({
    queryKey: ['/api/predictions'],
    enabled: !!user && !isDoctor,
  });
  
  // Get health metrics for the user
  const { data: healthMetrics, isLoading: metricsLoading } = useQuery({
    queryKey: ['/api/health-metrics'],
    enabled: !!user && !isDoctor,
  });
  
  useEffect(() => {
    if (user) {
      setIsDoctor(user.role === 'doctor');
    }
  }, [user]);
  
  // Format prediction data for charts
  const predictionResults = useMemo(() => {
    if (!predictions || predictions.length === 0) return [];
    
    const counts = predictions.reduce((acc: any, prediction: any) => {
      if (prediction.result === true) {
        acc.positive += 1;
      } else {
        acc.negative += 1;
      }
      return acc;
    }, { positive: 0, negative: 0 });
    
    const positive = counts.positive;
    const negative = counts.negative;
    
    return [
      { name: 'Positive', value: positive, color: '#ef4444' },
      { name: 'Negative', value: negative, color: '#22c55e' },
    ];
  }, [predictions]);
  
  // Detect user condition for contextual tips
  const userCondition = useMemo(() => {
    if (!predictions || predictions.length === 0) return undefined;
    
    // Check if user has a positive heart disease prediction
    const hasHeartDisease = predictions.some((p: any) => p.result === true);
    if (hasHeartDisease) return "heart disease";
    
    // Can extend with other conditions as needed
    return undefined;
  }, [predictions]);
  
  // Loading state
  if (conversationsLoading || predictionsLoading || metricsLoading) {
    return (
      <div className="container mx-auto py-6 px-4">
        <h1 className="text-2xl font-bold mb-6">Dashboard</h1>
        <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
          {[1, 2, 3, 4, 5, 6].map((i) => (
            <Card key={i} className="animate-pulse">
              <CardHeader className="pb-2">
                <div className="h-4 bg-gray-200 rounded w-1/3"></div>
                <div className="h-6 bg-gray-200 rounded w-2/3 mt-2"></div>
              </CardHeader>
              <CardContent>
                <div className="h-24 bg-gray-200 rounded"></div>
              </CardContent>
            </Card>
          ))}
        </div>
      </div>
    );
  }
  
  return (
    <div className="flex">
      {/* Health Tips Sidebar */}
      {!isDoctor && <HealthTipsSidebar userCondition={userCondition} />}
      
      <div className="flex-1 container py-6 px-4">
        <div className="flex justify-between items-center mb-6">
          <h1 className="text-2xl font-bold">Dashboard</h1>
          <div className="flex space-x-4">
            <Link href="/disease-predictor">
              <Button className="flex items-center">
                <Activity className="mr-2 h-4 w-4" />
                Disease Predictor
              </Button>
            </Link>
            {isDoctor && (
              <>
                <Dialog>
                  <DialogTrigger asChild>
                    <Button className="flex items-center" variant="outline">
                      <Heart className="mr-2 h-4 w-4" />
                      AHA PREVENT Calculator
                    </Button>
                  </DialogTrigger>
                  <DialogContent className="max-w-4xl max-h-[85vh] overflow-y-auto">
                    <Suspense fallback={<div className="p-8 text-center">Loading calculator...</div>}>
                      <div className="py-2">
                        <PreventCalculator />
                      </div>
                    </Suspense>
                  </DialogContent>
                </Dialog>
                <Dialog>
                  <DialogTrigger asChild>
                    <Button className="flex items-center" variant="outline">
                      <Newspaper className="mr-2 h-4 w-4" />
                      Health News
                    </Button>
                  </DialogTrigger>
                  <DialogContent className="max-w-4xl max-h-[85vh] overflow-y-auto">
                    <DialogHeader>
                      <DialogTitle className="text-2xl font-bold text-red-700">Heart Health Resources</DialogTitle>
                      <DialogDescription>
                        Latest research, tools, and innovations in cardiovascular health
                      </DialogDescription>
                    </DialogHeader>
                    
                    <Tabs defaultValue="news" className="w-full mt-6">
                      <TabsList className="grid w-full grid-cols-2">
                        <TabsTrigger value="news">Latest News</TabsTrigger>
                        <TabsTrigger value="calculators">Risk Calculators</TabsTrigger>
                      </TabsList>
                      
                      <TabsContent value="news" className="py-4 space-y-6">
                        {/* First article */}
                        <div className="p-4 border rounded-lg">
                          <h3 className="text-xl font-bold mb-2">A new tool to predict heart disease risk</h3>
                          <p className="text-sm text-muted-foreground mb-1">March 1, 2024 | Harvard Heart Letter</p>
                          <p className="mb-4">The PREVENT equation — which takes kidney and metabolic health into account — estimates a person's risk of heart disease over the next 30 years.</p>
                          
                          <div className="flex items-start space-x-4 mb-4">
                            <div className="flex-1">
                              <p className="mb-3">In January, the American Heart Association (AHA) released a new online calculator to predict a person's odds of developing heart disease.</p>
                              <p className="mb-3">Compared to previous calculators, the updated tool considers broader measures of health and a longer horizon of risk. The goal? To encourage earlier, more targeted strategies to help people avoid cardiovascular problems.</p>
                              <p>The PREVENT equation (its name is based on the phrase "predicting risk of cardiovascular disease events") was designed to capture an accurate picture of the American population.</p>
                            </div>
                            <div className="flex-shrink-0 w-1/3">
                              <div className="bg-blue-100 rounded-md p-3 relative overflow-hidden">
                                <div className="absolute inset-0 bg-gradient-to-br from-blue-50/80 to-transparent"></div>
                                <div className="relative z-10 flex flex-col items-center">
                                  <Heart className="h-16 w-16 text-red-500 mb-2" />
                                  <div className="text-xs text-center text-gray-700 font-medium">Heart Disease Risk</div>
                                  <div className="text-xs text-center text-gray-700 font-medium">Prediction Model</div>
                                </div>
                              </div>
                            </div>
                          </div>
                          
                          <Button size="sm" variant="outline" className="mt-2" onClick={() => window.open("https://www.health.harvard.edu/heart-health/a-new-tool-to-predict-heart-disease-risk", "_blank")}>
                            Read more <ExternalLink className="ml-1 h-3 w-3" />
                          </Button>
                        </div>
                        
                        {/* System updates section */}
                        <div className="mt-8">
                          <h3 className="text-xl font-semibold mb-4">System Updates & Improvements</h3>
                          <div className="grid md:grid-cols-2 gap-6">
                            <div className="bg-white p-4 rounded-lg shadow-sm">
                              <h4 className="font-semibold mb-3 flex items-center text-blue-700">
                                <Activity className="h-5 w-5 mr-2" /> 
                                Disease Predictor Enhancements
                              </h4>
                              <p className="text-sm text-gray-700 mb-2">The heart disease predictor now includes guidance for input values:</p>
                              <ul className="list-disc pl-5 space-y-1 text-sm text-gray-700">
                                <li>Age: 29-77 years</li>
                                <li>Blood Pressure: 90-200 mmHg</li>
                                <li>Cholesterol: 130-320 mg/dL</li>
                                <li>Heart Rate: 70-200 bpm</li>
                                <li>ST Depression: 0.0-4.0 mm</li>
                              </ul>
                            </div>
                            
                            <div className="bg-white p-4 rounded-lg shadow-sm">
                              <h4 className="font-semibold mb-3 flex items-center text-green-700">
                                <MessageSquare className="h-5 w-5 mr-2" /> 
                                Enhanced Communication
                              </h4>
                              <p className="text-sm text-gray-700 mb-2">WebSocket technology improvements ensure reliable real-time messaging between doctors and patients:</p>
                              <ul className="list-disc pl-5 space-y-1 text-sm text-gray-700">
                                <li>Robust reconnection with exponential backoff</li>
                                <li>Optimized ping-pong heartbeat mechanism</li>
                                <li>Online status tracking for all users</li>
                                <li>Secure image sharing for better diagnoses</li>
                                <li>Message status tracking (sent/delivered/read)</li>
                              </ul>
                            </div>
                          </div>
                          
                          <div className="mt-4 p-4 bg-gray-50 rounded-lg">
                            <h4 className="font-semibold mb-2">Planned Future Enhancements</h4>
                            <div className="grid md:grid-cols-3 gap-4 text-sm">
                              <div className="flex items-start">
                                <CheckCircle className="h-4 w-4 text-green-500 mt-0.5 mr-2 flex-shrink-0" />
                                <span>Video consultation capabilities</span>
                              </div>
                              <div className="flex items-start">
                                <CheckCircle className="h-4 w-4 text-green-500 mt-0.5 mr-2 flex-shrink-0" />
                                <span>AI-powered diagnostic assistance</span>
                              </div>
                              <div className="flex items-start">
                                <CheckCircle className="h-4 w-4 text-green-500 mt-0.5 mr-2 flex-shrink-0" />
                                <span>Extended prediction models for multiple diseases</span>
                              </div>
                            </div>
                          </div>
                        </div>
                      </TabsContent>
                      
                      <TabsContent value="calculators" className="py-4">
                        <HeartRiskCalculators />
                      </TabsContent>
                    </Tabs>
                  </DialogContent>
                </Dialog>
              </>
            )}
          </div>
        </div>
      
        {!isDoctor && (
          <>
            <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-4 mb-6">
              <HealthDataCard
                title="Heart Rate"
                value="72"
                unit="bpm"
                status="normal"
                icon={<Heart className="h-5 w-5 text-red-500" />}
              />
              <HealthDataCard
                title="Blood Pressure"
                value="120/80"
                unit="mmHg"
                status="normal"
                icon={<Activity className="h-5 w-5 text-blue-500" />}
              />
              <HealthDataCard
                title="Cholesterol"
                value="180"
                unit="mg/dL"
                status="normal"
                icon={<Thermometer className="h-5 w-5 text-yellow-500" />}
              />
              <HealthDataCard
                title="Last Checkup"
                value="2 weeks ago"
                status="normal"
                icon={<Calendar className="h-5 w-5 text-green-500" />}
              />
            </div>
          </>
        )}
      
        <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
          {/* Recent Conversations Card */}
          <Card>
            <CardHeader className="pb-2">
              <div className="flex items-center justify-between">
                <CardTitle>Recent Conversations</CardTitle>
                <Users className="h-4 w-4 text-gray-500" />
              </div>
              <CardDescription>Your latest patient-doctor communications</CardDescription>
            </CardHeader>
            <CardContent>
              {conversations && conversations.length > 0 ? (
                <div className="space-y-4">
                  {conversations.slice(0, 3).map((conversation: any) => (
                    <div key={conversation.id} className="flex justify-between items-center border-b pb-2">
                      <div>
                        <p className="font-medium">
                          {isDoctor 
                            ? `Patient ${conversation.patientId}`
                            : `Dr. ${conversation.doctorId}`}
                        </p>
                        <p className="text-sm text-muted-foreground">
                          Last message: {new Date(conversation.lastMessageAt).toLocaleString()}
                        </p>
                      </div>
                      <Link href={`/chat/${conversation.id}`}>
                        <Button variant="ghost" size="sm">View</Button>
                      </Link>
                    </div>
                  ))}
                </div>
              ) : (
                <div className="flex flex-col items-center justify-center text-center h-[150px]">
                  <MessageSquare className="h-10 w-10 text-gray-300 mb-3" />
                  <p className="text-muted-foreground">No conversations yet</p>
                </div>
              )}
            </CardContent>
            <CardFooter>
              <Link href="/chat">
                <Button variant="outline" className="w-full">View All Conversations</Button>
              </Link>
            </CardFooter>
          </Card>
      
          {/* Account Statistics Card */}
          <Card>
            <CardHeader className="pb-2">
              <CardTitle>Account Statistics</CardTitle>
              <CardDescription>Summary of your platform activity</CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                <div className="flex justify-between items-center">
                  <div>
                    <p className="text-sm text-muted-foreground">Total Conversations</p>
                    <div className="text-3xl font-bold">{conversations?.length || 0}</div>
                  </div>
                  <MessageSquare className="h-10 w-10 text-gray-200" />
                </div>
                
                {!isDoctor && (
                  <div className="flex justify-between items-center">
                    <div>
                      <p className="text-sm text-muted-foreground">Health Predictions</p>
                      <div className="text-3xl font-bold">{predictions?.length || 0}</div>
                    </div>
                    <Activity className="h-10 w-10 text-gray-200" />
                  </div>
                )}
                
                {isDoctor && (
                  <div className="flex justify-between items-center">
                    <div>
                      <p className="text-sm text-muted-foreground">Patient Files</p>
                      <div className="text-3xl font-bold">12</div>
                    </div>
                    <FileText className="h-10 w-10 text-gray-200" />
                  </div>
                )}
              </div>
            </CardContent>
          </Card>
      
          {/* Prediction Results or Patient Demographics Card */}
          <Card>
            <CardHeader className="pb-2">
              {isDoctor ? (
                <>
                  <CardTitle>Patient Demographics</CardTitle>
                  <CardDescription>Age distribution of your patients</CardDescription>
                </>
              ) : (
                <>
                  <CardTitle>Prediction Results</CardTitle>
                  <CardDescription>Summary of your health predictions</CardDescription>
                </>
              )}
            </CardHeader>
            <CardContent>
              {isDoctor ? (
                // Doctor view - Patient demographics
                <div className="h-[200px]">
                  <ResponsiveContainer width="100%" height="100%">
                    <BarChart
                      data={[
                        { age: '20-30', count: 5 },
                        { age: '31-40', count: 8 },
                        { age: '41-50', count: 12 },
                        { age: '51-60', count: 7 },
                        { age: '60+', count: 3 },
                      ]}
                      margin={{ top: 10, right: 10, left: 0, bottom: 20 }}
                    >
                      <CartesianGrid strokeDasharray="3 3" vertical={false} />
                      <XAxis dataKey="age" />
                      <YAxis />
                      <RechartTooltip />
                      <Bar dataKey="count" fill="#3b82f6" radius={[4, 4, 0, 0]} />
                    </BarChart>
                  </ResponsiveContainer>
                </div>
              ) : (
                // Patient view - Prediction results chart
                  predictions && predictions.length > 0 ? (
                    <>
                      <div className="h-[200px] flex items-center justify-center">
                        <ResponsiveContainer width="100%" height="100%">
                          <PieChart>
                            <Pie
                              data={predictionResults}
                              cx="50%"
                              cy="50%"
                              innerRadius={60}
                              outerRadius={80}
                              paddingAngle={5}
                              dataKey="value"
                              label
                            >
                              {predictionResults.map((entry, index) => (
                                <Cell key={`cell-${index}`} fill={entry.color} />
                              ))}
                            </Pie>
                            <RechartTooltip />
                          </PieChart>
                        </ResponsiveContainer>
                      </div>
                      <div className="flex justify-center space-x-6 mt-4">
                        <div className="flex items-center">
                          <div className="w-4 h-4 bg-red-500 rounded-full mr-2"></div>
                          <span className="text-sm">Positive ({predictionResults[0]?.value || 0})</span>
                        </div>
                        <div className="flex items-center">
                          <div className="w-4 h-4 bg-green-500 rounded-full mr-2"></div>
                          <span className="text-sm">Negative ({predictionResults[1]?.value || 0})</span>
                        </div>
                      </div>
                    </>
                  ) : (
                    <div className="flex flex-col items-center justify-center text-center h-[200px]">
                      <AlertTriangle className="h-10 w-10 text-yellow-500 mb-3" />
                      <p className="text-muted-foreground">No prediction data available</p>
                    </div>
                  )
              )}
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  );
}
